services:
  app:
    image: todo-frontend-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api/
    container_name: todo-frontend-dev

  backend:
    image: todo-backend-dev
    build: 
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    ports: 
      - 3001:3001
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
      PORT: 3001
    volumes:
      - ./todo-backend/src:/usr/src/app/src
    container_name: todo-backend-dev
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/src/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo-data:/data/db
  
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis-data:/data

  nginx:
    image: nginx:1.20.1
    build: ./todo-frontend
    volumes: 
     - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - backend